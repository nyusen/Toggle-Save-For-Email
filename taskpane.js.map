{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://commands/./src/tag-taskpane.js"],"sourcesContent":["// Global variables for authentication\nlet accessToken = null;\nlet idToken = null;\n\n// Store tags globally so we can filter them\nlet availableTags = [];\n\n// Store the authenticated HTML content\nconst authenticatedHTML = `\n    <div class=\"tag-container\">\n        <div class=\"search-container\">\n            <input type=\"text\" id=\"tagSearch\" class=\"search-input\" placeholder=\"Search tags...\" oninput=\"filterTags(this.value)\">\n        </div>\n        <div id=\"tagList\" class=\"tag-list\">\n            <!-- Tags will be dynamically added here -->\n        </div>\n        <div class=\"custom-tag-container\">\n            <input type=\"text\" id=\"customTagInput\" class=\"search-input\" placeholder=\"Add custom tag...\">\n            <button onclick=\"addCustomTag()\" class=\"add-tag-button\">Add Tag</button>\n        </div>\n    </div>\n    <div id=\"selectedTags\" class=\"selected-tags\">\n        <!-- Selected tags will be displayed here -->\n    </div>\n`;\n\nOffice.onReady(() => {\n    // Check if we have tokens in session storage\n    accessToken = sessionStorage.getItem('accessToken');\n    idToken = sessionStorage.getItem('idToken');\n\n    // Set saveForTraining to true when taskpane loads\n    Office.context.mailbox.item.loadCustomPropertiesAsync((result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n            const props = result.value;\n            props.set(\"saveForTraining\", true);\n            props.saveAsync(() => {\n                initializeUI();\n            });\n        }\n    });\n});\n\nfunction initializeUI() {\n    if (idToken) {\n        // If authenticated, show the tag interface and load tags\n        document.body.innerHTML = authenticatedHTML;\n        loadTags();\n    } else {\n        // If not signed in, show sign-in dialog\n        document.body.innerHTML = '<div class=\"error-message\">Please sign in to manage tags.</div>';\n        showSignInDialog();\n    }\n}\n\nfunction showSignInDialog() {\n    Office.context.ui.displayDialogAsync('https://nyusen.github.io/Toggle-Save-For-Email/signin-dialog.html', \n        {height: 40, width: 30, displayInIframe: true},\n        function (signInResult) {\n            if (signInResult.status === Office.AsyncResultStatus.Failed) {\n                console.error(signInResult.error.message);\n                showError('Failed to open sign-in dialog');\n                return;\n            }\n\n            const signInDialog = signInResult.value;\n            signInDialog.addEventHandler(Office.EventType.DialogMessageReceived, async function (signInArg) {\n                if (signInArg.message === 'signin') {\n                    // User wants to sign in\n                    signInDialog.close();\n                    // Add timeout before proceeding\n                    setTimeout(() => {\n                        handleSignIn().then(() => {\n                            // User is signed in, restore the authenticated UI and load tags\n                            setTimeout(() => {\n                                initializeUI();\n                            }, 1000);\n                        }).catch((error) => {\n                            showError('Failed to sign in');\n                        });\n                    }, 1000);\n                } else if (signInArg.message === 'cancel') {\n                    // User doesn't want to sign in\n                    signInDialog.close();\n                    setTimeout(() => {\n                        showError('Authentication required to load tags');\n                    }, 1000);\n                }\n            });\n        }\n    );\n}\n\n// Function to handle sign-in\nfunction handleSignIn() {\n    return new Promise((resolve, reject) => {\n        // Generate random state and PKCE verifier\n        const state = generateRandomString(32);\n        const codeVerifier = generateRandomString(64);\n        const nonce = generateRandomString(16);\n        \n        // Store state and code verifier in parent window's session storage\n        window.sessionStorage.setItem('authState', state);\n        window.sessionStorage.setItem('codeVerifier', codeVerifier);\n\n        // Generate code challenge\n        generateCodeChallenge(codeVerifier).then(codeChallenge => {\n            // Build the URL to our local sign-in start page\n            const startUrl = new URL('https://nyusen.github.io/Toggle-Save-For-Email/sign-in-start.html');\n            startUrl.searchParams.append('state', state);\n            startUrl.searchParams.append('nonce', nonce);\n            startUrl.searchParams.append('code_challenge', codeChallenge);\n            startUrl.searchParams.append('code_challenge_method', 'S256');\n            startUrl.searchParams.append('code_verifier', codeVerifier);\n            \n            // Add delay before opening the auth dialog\n            setTimeout(() => {\n                // Open our local page in a dialog, which will then redirect to Microsoft\n                Office.context.ui.displayDialogAsync(startUrl.toString(), \n                    {height: 60, width: 30}, \n                    function(result) {\n                        if (result.status === Office.AsyncResultStatus.Failed) {\n                            console.error(result.error.message);\n                            reject(new Error(result.error.message));\n                            return;\n                        }\n\n                        const dialog = result.value;\n                        dialog.addEventHandler(Office.EventType.DialogMessageReceived, function(arg) {\n                            try {\n                                const message = JSON.parse(arg.message);\n                                if (message.type === 'token') {\n                                    // Store both tokens\n                                    accessToken = message.token;\n                                    idToken = message.idToken;\n                                    sessionStorage.setItem('accessToken', message.token);\n                                    sessionStorage.setItem('idToken', message.idToken);\n                                    sessionStorage.setItem('tokenType', message.tokenType);\n                                    sessionStorage.setItem('expiresIn', message.expiresIn);\n                                    dialog.close();\n                                    resolve(message.token);\n                                } else if (message.type === 'error') {\n                                    dialog.close();\n                                    reject(new Error(message.error));\n                                }\n                            } catch (e) {\n                                dialog.close();\n                                reject(e);\n                            }\n                        });\n\n                        dialog.addEventHandler(Office.EventType.DialogEventReceived, function(arg) {\n                            dialog.close();\n                            reject(new Error('Dialog closed'));\n                        });\n                    }\n                );\n            }, 1000); // Wait 1 second to ensure previous dialog is fully closed\n        }).catch(error => {\n            reject(error);\n        });\n    });\n}\n\n// Function to show error message in the taskpane\nfunction showError(message) {\n    const container = document.querySelector('.tag-container');\n    container.innerHTML = `\n        <div style=\"color: red; padding: 20px; text-align: center;\">\n            <p>${message}</p>\n            <button onclick=\"showSignInDialog()\">Sign In</button>\n        </div>\n    `;\n}\n\n// Function to fetch tags from the server\nasync function loadTags() {\n    try {\n        // Make authenticated request to get tags\n        const response = await makeAuthenticatedRequest('https://ml-inf-svc-dev.eventellect.com/corpus-collector/api/tag');\n        availableTags = await response.json();\n        displayFilteredTags(availableTags);\n    } catch (error) {\n        console.error('Error loading tags:', error);\n        showError('Failed to load tags');\n    }\n}\n\n// Function to display filtered tags\nfunction displayFilteredTags(tags) {\n    const tagList = document.getElementById('tagList');\n    if (tags.length === 0) {\n        tagList.innerHTML = '<div class=\"no-results\">No matching tags found</div>';\n        return;\n    }\n    \n    // Get currently selected tags from custom properties\n    Office.context.mailbox.item.loadCustomPropertiesAsync((result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n            const props = result.value;\n            let selectedTags = props.get('selectedTags') || [];\n            if (typeof selectedTags === 'string') {\n                selectedTags = JSON.parse(selectedTags);\n            }\n            \n            // Create tag list with checked state preserved\n            tagList.innerHTML = tags.map(tag => {\n                const isChecked = selectedTags.some(selectedTag => selectedTag.id === tag.id);\n                return `\n                    <div class=\"tag-item\">\n                        <input type=\"checkbox\" id=\"tag-${tag.id}\" value=\"${tag.id}\" \n                            onchange=\"handleTagSelection(this)\" ${isChecked ? 'checked' : ''}>\n                        <label for=\"tag-${tag.id}\">${tag.description}</label>\n                    </div>\n                `;\n            }).join('');\n        }\n    });\n}\n\n// Function to filter tags based on search input\nfunction filterTags(searchText) {\n    if (!availableTags) return;\n    \n    const searchLower = searchText.toLowerCase().trim();\n    const filteredTags = searchLower === '' \n        ? availableTags \n        : availableTags.filter(tag => \n            tag.description.toLowerCase().includes(searchLower));\n    \n    displayFilteredTags(filteredTags);\n    \n    // Restore checked state for selected tags\n    const selectedTags = getSelectedTags();\n    selectedTags.forEach(tag => {\n        const checkbox = document.getElementById(`tag-${tag.id}`);\n        if (checkbox) {\n            checkbox.checked = true;\n        }\n    });\n}\n\n// Function to get currently selected tags\nfunction getSelectedTags() {\n    const selectedTagsContainer = document.getElementById('selectedTags');\n    return Array.from(selectedTagsContainer.getElementsByClassName('selected-tag'))\n        .map(tagElement => {\n            const tagId = parseInt(tagElement.dataset.tagId);\n            return availableTags.find(tag => tag.id === tagId);\n        })\n        .filter(tag => tag); // Remove any undefined entries\n}\n\n// Function to make authenticated requests\nasync function makeAuthenticatedRequest(url, options = {}) {\n    if (!idToken) {\n        throw new Error('No id token available');\n    }\n\n    console.log(idToken);\n    console.log(accessToken);\n\n    const requestOptions = {\n        ...options,\n        headers: {\n            ...options.headers,\n            'Authorization': `Bearer ${idToken}`\n        }\n    };\n\n    const response = await fetch(url, requestOptions);\n    \n    if (response.status === 401) {\n        // Clear tokens if unauthorized\n        sessionStorage.removeItem('accessToken');\n        sessionStorage.removeItem('idToken');\n        accessToken = null;\n        idToken = null;\n    }\n    \n    return response;\n}\n\n// Utility functions for authentication\nfunction generateRandomString(length) {\n    const array = new Uint8Array(length);\n    crypto.getRandomValues(array);\n    return Array.from(array, byte => ('0' + (byte & 0xFF).toString(16)).slice(-2)).join('');\n}\n\nasync function generateCodeChallenge(verifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(verifier);\n    const hash = await crypto.subtle.digest('SHA-256', data);\n    return base64URLEncode(hash);\n}\n\nfunction base64URLEncode(buffer) {\n    return btoa(String.fromCharCode(...new Uint8Array(buffer)))\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/, '');\n}\n\n// Function to handle tag selection\nfunction handleTagSelection(checkbox) {\n    const tagId = parseInt(checkbox.value);\n    const selectedTagsContainer = document.getElementById('selectedTags');\n    \n    if (checkbox.checked) {\n        // Find the tag object from availableTags\n        const selectedTag = availableTags.find(tag => tag.id === tagId);\n\n        if (selectedTag) {\n            const tagElement = document.createElement('span');\n            tagElement.className = 'selected-tag';\n            tagElement.dataset.tagId = selectedTag.id;\n            tagElement.dataset.description = selectedTag.description; // Store description for getSelectedTags\n            tagElement.innerHTML = `\n                ${selectedTag.description}\n                <span class=\"remove-tag\" onclick=\"removeTag('${selectedTag.id}')\">&times;</span>\n            `;\n            selectedTagsContainer.appendChild(tagElement);\n        }\n    } else {\n        // Remove the tag\n        const existingTag = selectedTagsContainer.querySelector(`[data-tag-id=\"${tagId}\"]`);\n        if (existingTag) {\n            existingTag.remove();\n        }\n    }\n    \n    // Save selected tags to custom properties\n    saveSelectedTags();\n}\n\n// Function to remove a tag\nfunction removeTag(tagId) {\n    // Uncheck the checkbox\n    const checkbox = document.getElementById(`tag-${tagId}`);\n    if (checkbox) {\n        checkbox.checked = false;\n    }\n    \n    // Remove the tag from selected tags\n    const selectedTagsContainer = document.getElementById('selectedTags');\n    const existingTag = selectedTagsContainer.querySelector(`[data-tag-id=\"${tagId}\"]`);\n    if (existingTag) {\n        existingTag.remove();\n    }\n    \n    // Save selected tags to custom properties\n    saveSelectedTags();\n}\n\n// Function to save selected tags to custom properties\nfunction saveSelectedTags() {\n    Office.context.mailbox.item.loadCustomPropertiesAsync((result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n            const props = result.value;\n            const selectedTags = getSelectedTags();\n            props.set(\"selectedTags\", JSON.stringify(selectedTags));\n            props.saveAsync();\n        }\n    });\n}\n\n// Function to load selected tags from custom properties\nfunction loadSelectedTags() {\n    Office.context.mailbox.item.loadCustomPropertiesAsync((result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n            const props = result.value;\n            const savedTags = props.get(\"selectedTags\");\n            if (savedTags) {\n                try {\n                    const selectedTagIds = JSON.parse(savedTags);\n                    selectedTagIds.forEach(tag => {\n                        const checkbox = document.getElementById(`tag-${tag.id}`);\n                        if (checkbox) {\n                            checkbox.checked = true;\n                            // Trigger the selection handler to update the UI\n                            handleTagSelection(checkbox);\n                        }\n                    });\n                } catch (e) {\n                    console.error('Error parsing saved tags:', e);\n                }\n            }\n        }\n    });\n}\n\n// Function to add a custom tag\nasync function addCustomTag() {\n    const customTagInput = document.getElementById('customTagInput');\n    const description = customTagInput.value.trim();\n    \n    if (description) {\n        try {\n            // Make API call to get tag ID\n            const response = await makeAuthenticatedRequest('https://ml-inf-svc-dev.eventellect.com/corpus-collector/api/tag', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ description })\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to create tag');\n            }\n\n            const data = await response.json();\n            const tagObject = {\n                id: data.id,\n                description: description\n            };\n\n            // Add the new tag to availableTags\n            availableTags.push(tagObject);\n\n            // Store the tag object in custom properties\n            Office.context.mailbox.item.loadCustomPropertiesAsync((result) => {\n                if (result.status === Office.AsyncResultStatus.Succeeded) {\n                    const props = result.value;\n                    let selectedTags = props.get('selectedTags') || [];\n                    if (typeof selectedTags === 'string') {\n                        selectedTags = JSON.parse(selectedTags);\n                    }\n\n                    // Add the new tag to selected tags if not already present\n                    if (!selectedTags.some(tag => tag.id === tagObject.id)) {\n                        selectedTags.push(tagObject);\n                        props.set('selectedTags', JSON.stringify(selectedTags));\n                        props.saveAsync(() => {\n                            // After saving, update both displays with the new state\n                            updateSelectedTagsDisplay(selectedTags);\n                            displayFilteredTags(availableTags);\n                            customTagInput.value = '';\n                        });\n                    }\n                }\n            });\n        } catch (error) {\n            console.error('Error creating tag:', error);\n            // You might want to show an error message to the user here\n        }\n    }\n}\n\n// Function to update the selected tags display\nfunction updateSelectedTagsDisplay(selectedTags) {\n    const selectedTagsContainer = document.getElementById('selectedTags');\n    \n    selectedTagsContainer.innerHTML = selectedTags.map(tag => `\n        <span class=\"selected-tag\" data-tag-id=\"${tag.id}\">\n            ${tag.description}\n            <span class=\"remove-tag\" onclick=\"removeTag('${tag.id}')\">&times;</span>\n        </span>\n    `).join('');\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","accessToken","idToken","availableTags","authenticatedHTML","Office","onReady","sessionStorage","getItem","context","mailbox","item","loadCustomPropertiesAsync","result","status","AsyncResultStatus","Succeeded","props","set","saveAsync","initializeUI","document","body","innerHTML","loadTags","showSignInDialog","ui","displayDialogAsync","height","width","displayInIframe","signInResult","Failed","console","error","message","showError","signInDialog","addEventHandler","EventType","DialogMessageReceived","_ref","_callee","signInArg","_callee$","_context","close","setTimeout","handleSignIn","_x","reject","state","generateRandomString","codeVerifier","nonce","window","setItem","generateCodeChallenge","codeChallenge","startUrl","URL","searchParams","append","toString","dialog","JSON","parse","token","tokenType","expiresIn","DialogEventReceived","container","querySelector","concat","_loadTags","_callee2","response","_callee2$","_context2","makeAuthenticatedRequest","json","displayFilteredTags","t0","tags","tagList","getElementById","selectedTags","get","map","tag","isChecked","some","selectedTag","id","description","join","filterTags","searchText","searchLower","toLowerCase","trim","filteredTags","filter","includes","getSelectedTags","checkbox","checked","selectedTagsContainer","Array","from","getElementsByClassName","tagElement","tagId","parseInt","dataset","find","_x2","_makeAuthenticatedRequest","_callee3","url","options","requestOptions","_args3","_callee3$","_context3","undefined","log","_objectSpread","headers","fetch","removeItem","array","Uint8Array","crypto","getRandomValues","byte","_x3","_generateCodeChallenge","_callee4","verifier","encoder","data","hash","_callee4$","_context4","TextEncoder","encode","subtle","digest","base64URLEncode","buffer","btoa","String","fromCharCode","_toConsumableArray","replace","handleTagSelection","createElement","className","appendChild","existingTag","remove","saveSelectedTags","removeTag","stringify","loadSelectedTags","savedTags","selectedTagIds","addCustomTag","_addCustomTag","_callee5","customTagInput","tagObject","_callee5$","_context5","ok","updateSelectedTagsDisplay"],"sourceRoot":""}